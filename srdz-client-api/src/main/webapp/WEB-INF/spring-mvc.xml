<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="cn.org.citycloud"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 定义JSP文件的位置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- cacheManager, 指定ehcache.xml的位置 -->
	<!--<bean id="cacheManagerEhcache"-->
		<!--class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">-->
		<!--<property name="configLocation">-->
			<!--<value>classpath:ehcache.xml</value>-->
		<!--</property>-->
		<!--&lt;!&ndash; 由于hibernate也使用了Ehcache, 保证双方都使用同一个缓存管理器 &ndash;&gt;-->
		<!--<property name="shared" value="true" />-->
	<!--</bean>-->
	
	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
	<mvc:default-servlet-handler />
	
	<bean class="cn.org.citycloud.common.CommonSwaggerConfig" /> 

	<!-- 定义无需Controller的url<->view直接映射 -->
	<!-- <mvc:view-controller path="/" view-name="index" /> -->

	<mvc:interceptors>
		<bean class="cn.org.citycloud.interceptor.RequestInterceptor"></bean>
		<mvc:interceptor>
			<mvc:mapping path="/accounts"/>
			<mvc:mapping path="/accounts/**"/>
			<mvc:mapping path="/accounts/addresses"/>
			<mvc:mapping path="/accounts/addresses/**"/>
			<mvc:mapping path="/accounts/favorites"/>
			<mvc:mapping path="/accounts/favorites/**"/>
			<mvc:mapping path="/orders"/>
			<mvc:mapping path="/orders/**"/>
			<mvc:mapping path="/evaluates"/>
			<mvc:mapping path="/evaluates/**"/>
			<mvc:mapping path="/distributors"/>
			<mvc:mapping path="/distributors/**"/>
			<mvc:mapping path="/distributorGoods"/>
			<mvc:mapping path="/distributorGoods/**"/>
			<mvc:mapping path="/shoppingCarts"/>
			<mvc:mapping path="/shoppingCarts/**"/>
			<mvc:mapping path="/payments"/>
			<mvc:mapping path="/payments/**"/>
			
			<mvc:exclude-mapping path="/swagger/**"/>
			<mvc:exclude-mapping path="/alipay/alipayNotify"/>
			
			<mvc:exclude-mapping path="/accounts/forgetpwd"/>
			
			<bean class="cn.org.citycloud.interceptor.TokenInterceptor"></bean>
		</mvc:interceptor>
		
		<!-- 微信API拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/weixin"/>
			<mvc:mapping path="/weixin/**"/>
						
			<mvc:exclude-mapping path="/swagger/**"/>
			<mvc:exclude-mapping path="/weixin/auth/callback"/>
			<bean class="cn.org.citycloud.interceptor.WxTokenInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>
